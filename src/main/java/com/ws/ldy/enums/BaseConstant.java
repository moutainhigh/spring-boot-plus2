package com.ws.ldy.enums;import com.ws.ldy.modules.admin.model.entity.AdminAuthority;import com.ws.ldy.modules.admin.model.vo.AdminDictionaryVO;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * 常量类 * * @author ws * @mail 1720696548@qq.com * @date 2020/4/27 0027 23:12 * @return */public interface BaseConstant {    /**     * 接口类型, 类标有该参数的类所有接口会被加入权限扫描范围内     */    interface InterfaceType {        String PC_ADMIN = "pc-admin";  //  pc-- 管理端/  后台管理,[需登录+需授权], 代码生成器的默认选中        String PC_USER = "pc-user";    //  pc-- 用户端/  [需登录]        String RELEASE = "release";    //  放行接口    }    /**     * 系统核心常量类     */    interface Sys {        String TOKEN = "TOKEN";       // pc-- 后台管理,标有该注解的类所有接口会被加入权限扫描范围内        // 绝对放行接口，不受限于-权限接口管理        List<String> URIS = new ArrayList<String>() {{            add("/admin/adminUser/login");        // 管理端登录接口            add("/yabei/consumer/ybUser/login");  // 用户端登录接口            add("/admin/adminRole/updRoleAuthAll");  // 重分权限,所有角色有所有url权限        }};    }    /**     * 牙贝业务的核心常量类     */    interface Yb {        /**         * 牙贝帮助中心的父级 字典code         */        String ARTICLE_HELP = "ARTICLE_HELP";        /**         * 矫治器分类 字典code         */        String APPLIANCE_TYPE = "appliance_type";        /**         * 学院 字典code         */        String ARTICLE_COLLEGE = "ARTICLE_HELP";    }    /**     * 系统的缓存数据(所有通用)     */    class Cache {        /**         * 当前系统的所有权限接口数据（key = uri ）         * 权限版本号：version，当版本号一致时, 用户调用任何接口都将刷新Token, 重而热更新用户的访问权限         */        public static Map<String, AdminAuthority> AUTH_MAP = new HashMap<>();        public static Integer AUTH_VERSION = 0;        /**         * 数据字典(code分组), 不包括禁用数据，等同于 Enums的数据         * 版本号：version，当版本号一致时, 不返回前台 dictVOGroupMap 数据         */        public static Map<String, AdminDictionaryVO.FindCodeGroup> DICT_MAP_GROUP = null;    }}