package com.ws.ldy.common.utils;import com.baomidou.mybatisplus.core.metadata.IPage;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;import net.sf.cglib.beans.BeanCopier;import org.springframework.beans.BeanUtils;import java.util.ArrayList;import java.util.List;import java.util.stream.Collectors;/** *   Dto，Vo，entity 转换工具类 * <p> * dot ,Do ,entity 相互转换， 采用 org.springframework.beans.BeanUtils 包,同：BeanUtils.copyProperties(dtoEntity, newInstance); * <p> * * @author ws * @param1 oldClass 原数据--Dto，Vo，entity * @param1 newClass 转换为--Dto，Vo，entity */public class BeanDtoVoUtil<V, E> {    /**     *   dot ,Do ,entity 相互转换     * 同：BeanUtils.copyProperties(dtoEntity, newInstance);     *     * @param oldClass 原数据--Dto，Vo，entity     * @param newClass 转换为--Dto，Vo，entity     * @return     */    public static <E> E convert(Object oldClass, Class<E> newClass) {        // 判断oldClass 是否为空!        if (oldClass == null) {            return null;        }        // 判断newClass 是否为空        if (newClass == null) {            return null;        }        try {            // 1、创建新的对象实例            E newInstance = newClass.newInstance();            // 2、使用cglib ，几乎无性能损耗            BeanCopier copier = BeanCopier.create(oldClass.getClass(), newInstance.getClass(), false);            copier.copy(oldClass, newInstance, null);            // 2、 使用 springboot的，            // BeanUtils.copyProperties(oldClass, newInstance);            // 3、返回            return newInstance;        } catch (Exception e) {            e.printStackTrace();            return null;        }    }    /**     *    Page<Entity> 分页对象转 Page<Vo>  ( list 循环)     *     * @param page     * @param v     * @return com.baomidou.mybatisplus.core.metadata.IPage<V>     * @author ws     * @mail 1720696548@qq.com     * @date 2020/4/23 0023 11:26     */    public static <T, V> IPage<V> pageVo(Page<T> page, Class<V> v) {        IPage<V> vs = page.convert(item -> {            try {                V newV = (V) BeanDtoVoUtil.convert(item, v.newInstance().getClass());                return newV;            } catch (Exception e) {                e.printStackTrace();            }            return null;        });        return vs;    }    /**     *    list<Entity> 集合对象转list<Vo> ( list 循环)     *     * @param oldList     * @param v     * @return com.baomidou.mybatisplus.core.metadata.IPage<V>     * @author ws     * @mail 1720696548@qq.com     * @date 2020/4/23 0023 11:26     */    public static <T, V> List<V> listVo(List<T> oldList, Class<V> v) {        List<V> voList = new ArrayList<>();        try {            for (T t : oldList) {                V newV = (V) BeanDtoVoUtil.convert(t, v.newInstance().getClass());                voList.add(newV);            }            return voList;        } catch (Exception e) {            e.printStackTrace();        }        return null;    }    /**     *   list<Entity> 集合对象转list<Vo> （Stream 方式）     *     * @param oldList     * @param v     * @return com.baomidou.mybatisplus.core.metadata.IPage<V>     * @author ws     * @mail 1720696548@qq.com     * @date 2020/4/23 0023 11:26     */    public static <T, V> List<V> listVoStream(List<T> oldList, Class<V> v) {        List<V> voList = oldList.stream().map(item -> {            try {                return (V) BeanDtoVoUtil.convert(item, v.newInstance().getClass());            } catch (InstantiationException e) {                e.printStackTrace();            } catch (IllegalAccessException e) {                e.printStackTrace();            }            return null;        }).collect(Collectors.toList());        return voList;    }}