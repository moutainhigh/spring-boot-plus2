package com.ws.ldy.common.result;import com.fasterxml.jackson.annotation.JsonInclude;import lombok.Data;import java.io.Serializable;/** * TODO  后台管理--返回的数据格式(layui 为必须，及其他通用返回数据格式) * * @author 王松 * @WX-QQ 1720696548 * @date 2019/11/14 14:55 */@Datapublic class Result implements Serializable {    private static final long serialVersionUID = -5666504070515657048L;    private String code;    private String msg;    // 分页总数据数    @JsonInclude(value = JsonInclude.Include.NON_EMPTY)    private Integer count;    // 数据    @JsonInclude(value = JsonInclude.Include.NON_EMPTY)    private Object data;    public Result(Object data, Integer count, String code, String msg) {        this.count = count;        this.code = code;        this.data = data;        this.msg = msg;    }    //============================================================    //============================================================    //====================== 直接定义参数返回=======================    //============================================================    /**     * 成功返回（状态码0，layui必须）     *     * @param data     * @return     */    public static Result success(Object data) {        return new Result(data, null, "0", "ok");    }    /**     * 成功带分页（状态码0，layui必须）     *     * @param data     * @param count     * @return     */    public static Result success(Object data, int count) {        return new Result(data, count, "0", "ok");    }    /**     * 统一500 异常处理     *     * @return     */    public static Result error() {        return new Result(null, null, "500", "后台异常");    }    /**     * 自定义失败     *     * @param code     * @param msg     * @return     */    public static Result error(String code, String msg) {        return new Result(null, null, code, msg);    }    //===================================================================================    //===============================  使用枚举对象 定义返回参数  =========================    //===================================================================================    /**     * 成功返回(使用枚举,状态码200)     *     * @param data     * @return     *///    public static ResponseData successApi(Object data) {//        return new ResponseData(data, null, ErrorConstantEnum.SYS_SUCCESS.getCode(), ErrorConstantEnum.SYS_SUCCESS.getMsg());//    }//    /**//     * 成功带分页(使用枚举,状态码200)//     *//     * @param data//     * @param count//     * @return//     *///    public static ResponseData successApi(Object data, int count) {//        return new ResponseData(data, count, ErrorConstantEnum.SYS_SUCCESS.getCode(), ErrorConstantEnum.SYS_SUCCESS.getMsg());//    }////    /**//     * 自定义失败（使用枚举）//     *//     * @return//     *///    public static ResponseData errorApi() {//        return new ResponseData(null, null,ErrorConstantEnum.SYS_ERROR.getCode(),ErrorConstantEnum.SYS_ERROR.getMsg() );//    }}